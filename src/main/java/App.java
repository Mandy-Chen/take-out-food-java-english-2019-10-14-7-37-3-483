import java.util.ArrayList;
import java.util.List;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private ItemRepository itemRepository;//商品库
    private SalesPromotionRepository salesPromotionRepository;//销售促销库

    public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
        this.itemRepository = itemRepository;
        this.salesPromotionRepository = salesPromotionRepository;
    }

    public String bestCharge(List<String> inputs) {
        //TODO: write code here
        String receiptString = "";
        int totalPrice = 0;//原本的价格
        int actual_totalPrice_30 = 0;//满30减6的价格
        int actual_totalPrice_half = 0;//某些商品半价的价格
        int save_totalPrice = 0;//节约的价钱
        boolean flag = false;//是否有半价商品
        String displayName = "";
        String deteil = "";//促销具体细节
        String promotion = "";//促销部分
        List list = new ArrayList();
        receiptString = "============= Order details =============\n";
        for (int i = 0; i < inputs.size(); i++) {
            String id = inputs.get(i).substring(0, 8);
            Integer num = Integer.parseInt(inputs.get(i).substring(11, 12));
            for (int j = 0; j < itemRepository.findAll().size(); j++) {
                Double price = itemRepository.findAll().get(j).getPrice();
                String name = itemRepository.findAll().get(j).getName();
                if (id.equals(itemRepository.findAll().get(j).getId())) {
                    receiptString += inputs.get(i).replace(id, name) + " = " + Math.round(num * price) + " yuan\n";
                    totalPrice += Math.round(num * price);
                    for (int k = 0; k < salesPromotionRepository.findAll().get(1).getRelatedItems().size(); k++) {
                        if (salesPromotionRepository.findAll().get(1).getRelatedItems().get(k).contains(id)) {
                            flag = true;
                            save_totalPrice += Math.round(num * (price / 2));
                            list.add(name);
                        }
                    }
                }
            }
        }
        actual_totalPrice_half = totalPrice - save_totalPrice;
        //判断是否满30
        if (totalPrice >= 30) {
            actual_totalPrice_30 = totalPrice - 6;
            deteil = "满30减6 yuan，saving 6 yuan\n";
            promotion = "Promotion used:\n" + deteil +
                    "-----------------------------------\n";
        }
        //是否有半价商品
        if (flag) {
            if (actual_totalPrice_30 == actual_totalPrice_half || actual_totalPrice_30 < actual_totalPrice_half) {
                totalPrice = actual_totalPrice_30;
            } else {
                totalPrice = actual_totalPrice_half;
                displayName = salesPromotionRepository.findAll().get(1).getDisplayName();
                deteil = displayName + " (";
                for (int i = 0; i < list.size(); i++) {
                    if (i == list.size() - 1) {
                        deteil += list.get(i);
                    } else {
                        deteil += list.get(i) + "，";
                    }
                }
                deteil += ")，saving " + save_totalPrice + " yuan\n";
                promotion = "Promotion used:\n" + deteil +
                        "-----------------------------------\n";
            }
        }
        receiptString += "-----------------------------------\n" + promotion +
                "Total：" + totalPrice + " yuan\n" +
                "===================================";
        return receiptString;
    }
}
